{"mappings":"YAAA,IAAMA,EAAeC,SAASC,cAAc,UAEZC,EADnBF,SAASC,cAAc,QACCE,SAA7BC,EAAwBF,EAAxBG,MAAOC,EAAiBJ,EAAjBK,KAAMC,EAAWN,EAAXO,OACrBV,EAAaW,iBAAiB,SAMN,WAEUC,YAArB,WACTC,EAAWC,EAAUC,OAAOV,EAAMW,QAClCC,GAAaF,OAAOV,EAAMW,M,GACzBX,EAAMW,OAE0BJ,YAAxB,WACT,IAAK,IAAIM,EAAQ,EAAGA,EAAQT,EAAOO,MAAQ,EAAGE,GAAS,EACrDJ,GAAY,EACZG,GAAcF,OAAOR,EAAKS,OAC1BH,EAAWC,EAAUG,E,GAEtBZ,EAAMW,OAE2BJ,YAAzB,WACTE,EAAW,EACXG,EAAY,C,GACXV,EAAKS,MAAQP,EAASJ,EAAMW,M,IAvBjC,IAAIF,EAAW,EACXG,EAAY,EA2BU,SAAjBJ,EAAWM,EAAUC,GAEd,IAAZC,EAAI,IAAIC,SAAQ,SAACC,EAASC,GACNC,KAAKC,SAAW,GAEjCH,IAEAC,G,IAIYZ,YAAN,YAOc,SAALS,EAAGM,EAAUC,GACjCP,EAAEQ,MAAK,WACLC,QAAQC,IAAI,uBAAwCC,OAAfL,EAAS,QAAgBK,OAAVJ,EAAU,M,IAC7DK,OAAM,WACPH,QAAQC,IAAI,sBAAqCC,OAAfL,EAAS,QAAgBK,OAAVJ,EAAU,M,IAV3DM,CAAab,EAAGF,EAAUC,E,GACzBA,EAAYL,OAAOV,EAAMW,O","sources":["src/js/03-promises.js"],"sourcesContent":["const buttonSubmit = document.querySelector(\"button\")\nconst form = document.querySelector(\"form\")\nconst { delay, step, amount } = form.elements\nbuttonSubmit.addEventListener(\"click\", createPromise)\nlet position = 0\nlet stepValue = 0\n\n\n//Функция для решения задания\nfunction createPromise() {\n// Вызов первого элемента в нужное время\n  setTimeout(() => {\n    newPromise(position, Number(delay.value))\n    stepValue += Number(delay.value)\n  }, delay.value)\n// Вызов остальных элементов в нужное время\n  setTimeout(() => {\n    for (let index = 0; index < amount.value - 1; index += 1) {\n      position += 1\n      stepValue +=  Number(step.value)\n      newPromise(position, stepValue)\n    }\n  }, delay.value)\n// Обновление значений после конца действия \n  setTimeout(() => {\n    position = 1\n    stepValue = 0\n  }, step.value * amount + delay.value)\n\n}\n\n  //Функция для создания промисов\nfunction newPromise(position, stepValue) {\n// Создание промисов\nlet a = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n       resolve()\n  } else {\n       reject()\n    }\n  }) \n  // Обработка промисов\n  setTimeout(() => {\n    returnResult(a, position, stepValue)\n  }, stepValue - Number(delay.value))\n}\n\n\n  //Функция для обработкм промисов\nfunction returnResult(a, position, stepValue) {\n  a.then(() => {\n    console.log(`✅ Fulfilled promise ${position} in ${stepValue}ms`);\n  }).catch(() => {\n    console.log(`❌ Rejected promise ${position} in ${stepValue}ms`);\n  });\n}"],"names":["$ce04d3a99e08e73b$var$buttonSubmit","document","querySelector","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","addEventListener","setTimeout","$ce04d3a99e08e73b$var$newPromise","$ce04d3a99e08e73b$var$position","Number","value","$ce04d3a99e08e73b$var$stepValue","index","position1","stepValue1","a","Promise","resolve","reject","Math","random","position2","stepValue2","then","console","log","concat","catch","$ce04d3a99e08e73b$var$returnResult"],"version":3,"file":"03-promises.69488bd4.js.map"}