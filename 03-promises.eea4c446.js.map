{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,GAAWR,EAAKS,SACrCT,EAAKU,iBAAiB,UAKE,SAADC,GACrBA,EAAMC,iBAG0BC,YAArB,KACTC,EAAWC,EAAUC,OAAOZ,EAAMa,QAClCC,GAAaF,OAAOZ,EAAMa,MAAM,GAC/Bb,EAAMa,OAE0BJ,YAAxB,KACT,IAAK,IAAIM,EAAQ,EAAGA,EAAQX,EAAOS,MAAQ,EAAGE,GAAS,EACrDJ,GAAY,EACZG,GAAcF,OAAOV,EAAKW,OAC1BH,EAAWC,EAAUG,E,GAEtBd,EAAMa,OAE2BJ,YAAzB,KACTE,EAAW,EACXG,EAAY,CAAC,GACZZ,EAAKW,MAAQT,EAASJ,EAAMa,M,IAxBjC,IAAIF,EAAW,EACXG,EAAY,EA4BU,SAAjBJ,EAAWM,EAAUC,GAEd,IAAZC,EAAI,IAAIC,SAAQ,CAACC,EAASC,KACNC,KAAKC,SAAW,GAEjCH,IAEAC,GAAQ,IAIIZ,YAAN,MAOc,SAALS,EAAGM,EAAUC,GACjCP,EAAEQ,MAAK,KACLC,QAAQC,IAAI,uBAAqBJ,QAAiBC,MAAc,IAC/DI,OAAM,KACPF,QAAQC,IAAI,sBAAoBJ,QAAeC,MAAc,G,CAV7DK,CAAaZ,EAAGF,EAAUC,EAAU,GACnCA,EAAYL,OAAOZ,EAAMa,O","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(\"form\")\nconst { delay, step, amount } = form.elements\nform.addEventListener(\"submit\", createPromise)\nlet position = 0\nlet stepValue = 0\n\n//Функция для решения задания\nfunction createPromise(event) {\n  event.preventDefault()\n\n// Вызов первого элемента в нужное время\n  setTimeout(() => {\n    newPromise(position, Number(delay.value))\n    stepValue += Number(delay.value)\n  }, delay.value)\n// Вызов остальных элементов в нужное время\n  setTimeout(() => {\n    for (let index = 0; index < amount.value - 1; index += 1) {\n      position += 1\n      stepValue +=  Number(step.value)\n      newPromise(position, stepValue)\n    }\n  }, delay.value)\n// Обновление значений после конца действия \n  setTimeout(() => {\n    position = 1\n    stepValue = 0\n  }, step.value * amount + delay.value)\n\n}\n\n//Функция для создания промисов\nfunction newPromise(position, stepValue) {\n// Создание промисов\nlet a = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n       resolve()\n  } else {\n       reject()\n    }\n  }) \n  // Обработка промисов\n  setTimeout(() => {\n    returnResult(a, position, stepValue)\n  }, stepValue - Number(delay.value))\n}\n\n\n  //Функция для обработки промисов\nfunction returnResult(a, position, stepValue) {\n  a.then(() => {\n    console.log(`✅ Fulfilled promise ${position} in ${stepValue}ms`);\n  }).catch(() => {\n    console.log(`❌ Rejected promise ${position} in ${stepValue}ms`);\n  });\n}"],"names":["$47d4ff9957288465$var$form","document","querySelector","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","elements","addEventListener","event","preventDefault","setTimeout","$47d4ff9957288465$var$newPromise","$47d4ff9957288465$var$position","Number","value","$47d4ff9957288465$var$stepValue","index","position1","stepValue1","a","Promise","resolve","reject","Math","random","position2","stepValue2","then","console","log","catch","$47d4ff9957288465$var$returnResult"],"version":3,"file":"03-promises.eea4c446.js.map"}